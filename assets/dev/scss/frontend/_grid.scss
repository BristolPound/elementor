//
// Grid
//

// Section
.wroter-section {
	position: relative;

	// Container
	.wroter-container {
		display: flex;
		margin-right: auto;
		margin-left: auto;
		position: relative;
	}

	// Max-width of container depending on section settings
	&.wroter-section-boxed {
		& > .wroter-container {
			max-width: 1140px;
		}
	}

	// Stretched section settings
	&.wroter-section-stretched {
		position: relative;
		width: 100%;
	}

	// In section min-height / fit to screen mode
	&.wroter-section-items- {

		&top {

			> .wroter-container {
				align-items: flex-start;
			}
		}

		&middle {

			> .wroter-container {
				align-items: center;
			}
		}

		&bottom {

			> .wroter-container {
				align-items: flex-end;
			}
		}
	}

	// In columns stretch mode
	&.wroter-section-content- {

		&top {

			.wroter-column-wrap {
				align-items: flex-start;
			}
		}

		&middle {

			.wroter-column-wrap {
				align-items: center;
			}
		}

		&bottom {

			.wroter-column-wrap {
				align-items: flex-end;
			}
		}
	}

	@media (min-width: $screen-md-min) {

		// Section Full Height (note: don't be smart - min-height does not work well with the content position)
		&.wroter-section-height-full {
			height: 100vh;

			> .wroter-container {
				height: 100%;
			}
		}
	}
}

// Row
.wroter-row {
	width: 100%;
	display: flex;

	/* In dragging mode it's causing a columns fall */
	@media (max-width: $screen-sm-max) {
		flex-wrap: wrap;
	}
}

// Widget
.wroter-column-wrap {
	width: 100%;
	display: flex;
}

.wroter-widget-wrap {
	position: relative;
	width: 100%;
	z-index: 1;
}

.wroter-widget {
	position: relative;

	&:not(:last-child) {
		margin-bottom: 20px;
	}
}

// Columns
.wroter-column {
	position: relative;
	min-height: 1px;
	display: flex;

}

@mixin wroter-grid-classes {

	@each $sizeKey, $size in $column-sizes {

		&.wroter-col-#{$sizeKey}, &[data-col="#{$sizeKey}"] {
			width: $size;
		}
	}
}

@mixin wroter-responsive($breakpoint-name) {

	@each $size-name, $size in $column-sizes {

		&.wroter-#{$breakpoint-name}-#{$size-name} {
			width: $size;
		}
	}

}

// Columns Gap (Inner section supported)
.wroter-inner-section {

	.wroter-column-gap-no {

		.wroter-element-populated {
			padding: 0;
		}
	}
}

// Responsive Grid
.wroter-column {

	@media (max-width: $screen-xs-max) {
		@include wroter-responsive(xs);
	}

	@media (max-width: $screen-sm-max) {
		@include wroter-responsive(sm);
	}

	@media (min-width: $screen-md-min) and (max-width: $screen-md-max) {
		@include wroter-responsive(md);
	}
}

@media (min-width: $screen-md-min) {
	.wroter-column {
		@include wroter-grid-classes;
	}

	// Columns Gap
	.wroter-column-gap-default {

		.wroter-element-populated {
			padding: 10px;
		}
	}

	.wroter-column-gap-narrow {

		.wroter-element-populated {
			padding: 5px;
		}
	}

	.wroter-column-gap-extended {

		.wroter-element-populated {
			padding: 15px;
		}
	}

	.wroter-column-gap-wide {

		.wroter-element-populated {
			padding: 20px;
		}
	}

	.wroter-column-gap-wider {

		.wroter-element-populated {
			padding: 30px;
		}
	}
}

@media (max-width: $screen-sm-max) {
	.wroter-column {
		width: 100%;
	}

	.wroter-reverse-mobile > .wroter-container > .wroter-row {
		flex-direction: column-reverse;
	}
}
